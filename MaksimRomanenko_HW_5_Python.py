# Python HW 5 Functions, Lists
#  - Любой начальный список минимум 70 элементов.(Есть задания где можно меньше, по усмотрению)
#  - Все результаты выводить в консоль.
#
# 1.Написать скрипт который создаст список целых чисел.
import time

number_list = list(range(70))
print('1. Список целых чисел', number_list)

# 2.Написать скрипт который создаст список целых чётных чисел.
even_list = list(range(0,139,2))
print('2. Список целых четных чисел', even_list)

# 3.Написать скрипт который создаст список целых нечётных чисел.
odd_list = list(range(1,141,2))
print('3. Список целых нечетных чисел', odd_list)

# 4.Написать скрипт который из списка целых чисел выведет чётные числа.
even_list_1 = []
for i in number_list:
    if i % 2 == 0:
        even_list_1.append(i)
print('4. Список четных чисел из списка целых чисел ',   even_list_1)

# 5.Написать скрипт который из списка целых чисел выведет нечётные числа.
odd_list_1 = []
for i in number_list:
    if i % 2 != 0:
        odd_list_1.append(i)
print('5. Список нечетных чисел из списка целых чисел ', odd_list_1)

# 6.Написать скрипт который из списка целых чисел выведет чётные числа которые делятся на 5 без остатка.
even_list_2 = []
for i in number_list:
    if i % 2 == 0:
        if i % 5 == 0:
            even_list_2.append(i)
print('6. Список четных чисел, которые делятся на 5 без остатка ',   even_list_2)

# 7.Написать скрипт который из списка целых чисел выведет количество  чётных чисел которые делятся на 5 без остатка.
even_list_3 = []
for i in number_list:
    if i % 2 == 0:
        if i % 5 == 0:
            even_list_3.append(i)
print('7. Количество четных чисел, которые делятся на 5 без остатка  = ', len(even_list_3))


# 8.Написать скрипт который создаст список целых рандомных чисел.
import random

random_list = random.sample(range(0,100),70)
print('8. Список случайных целых чисел ', random_list)

# 9.Написать функцию которая, получив на вход любой из выше созданных списков, разобьёт его списки по 5 элементов
def lists(l, n):
    for i in range(0, len(number_list), n):
        yield l[i:i + n]
n = 5


x = list(lists(number_list, n))
print('9. Список number_list по 5 элементов', x)

# 10.Написать функцию которая, получив на вход список целых чисел, вернёт 2 списка, список чётных и
# список нечётных чисел.
def result(l):
    even_l = []
    odd_l = []
    for i in l:
        if i % 2 == 0:
            even_l.append(i)
        else:
            odd_l.append(i)

    print('10.1 Список четных чисел из списка number_list   ', even_l)
    print('10.2 Список нечетных чисел из списка number_list ', odd_l)
result(number_list)



# 11.Написать скрипт, который сгенерирует список под названием 5_stars
# из n списков по 5 элементов случайных целых чисел.
from random import randint

five_stars = []

n = int(input('Введите количество списков по 5 элементов:'))

for i in range(n):

    i = [randint(1, 40) for i in range(5)]
    five_stars.append(i)

print('11. Список из ' + str(n) + ' списков по 5 элементов = ', five_stars)

# 12.Написать скрипт который выведет список из сумм каждого внутреннего списка из  5_stars
summ_list = []

for i in range(n):
    i = five_stars[i]
    summ = sum(i)

    summ_list.append(summ)
print('12. Список из сумм каждого внутреннего списка five_stars', summ_list)


# 13.Написать функцию которая на вход получает список 5_stars, а вернёт 2 списка. В одном списке внутренние
# списки из 5_stars сумма чисел которых >= 100, а другой сумма чисел которых < 100. Если какого-то списка не получится,
# то вместо него вернуть текст “No lists”

def list_2(a):
    summ_more_100 = []
    summ_less_100 = []
    for i in a:

        # print(five_stars.index(i) + 1, '-й элемент из списка five_stars', i, ' //   ', 'Сумма элементов =', sum(i))
        if sum(i) >= 100:
            summ_more_100.append(i)

        else:
            summ_less_100.append(i)

    if len(summ_more_100) == 0:
        print('13.1 No lists, where sum >= 100')
        print('13.2 Cписок, где сумма элементов меньше 100', summ_less_100, len(summ_less_100))
    elif len(summ_less_100) == 0:
        print('13.2 No lists, where sum < 100')
        print('13.1 Cписок, где сумма элементов больше 100', summ_more_100, len(summ_more_100))
    else:
        print('13.1 Cписок, где сумма элементов больше 100', summ_more_100, len(summ_more_100))
        print('13.2 Cписок, где сумма элементов меньше 100', summ_less_100, len(summ_less_100))

list_2(five_stars)

# 14.Написать функцию которая получив на вход ваш возраст, выведет вам через какой срок вы сумеете отложить
# 10 000$, 20 000$, 30 000$, 50 000$, 100 000$ в кубышку.
# 15.Написать функцию которая получив на вход стартовую ЗП Junior QA и количество лет стажа выведет в консоль
# прогресс роста ЗП по каждому году из введенного количества лет стажа. Внутри функция учитывает дорожную карту
# развития скилов QA и список, полезных для компании, активностей которые может делать QA.
# Free implementation of function body logic
#
#
#
# 16.Написать скрипт который сгенерирует список имён пользователей. Список имён вывести в консоль.
# 17.Написать скрипт который сгенерирует список имён файлов. К каждому имени  файла надо прикрепить
# номер итерации цикла как порядковый номер.
# 18.Написать скрипт который сгенерирует список списков. Каждый элемент списка это список в котором
# 0-й элемент - это имя пользователя, а 1-й - элемент это дата регистрации.
# 19.Написать скрипт который сгенерирует список Employees списков . Каждый элемент списка - это список в котором:
# 0-й - элемент - это имя пользователя,
# 1-й - элемент - это логин,
# 2-й - элемент - это пароль,
# 3-й - элемент - это email (email тоже генерировать),
# 4-й - элемент - это дата регистрации
# 20.Написать скрипт который сгенерирует список family списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - семейный статус (True, False - генерировать рандомно),
# 21.Написать скрипт который сгенерирует список gender списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - гендер (1-м, 0-ж)
# 22.Написать скрипт который сгенерирует список salary списков. Каждый элемент списка - это список в котором:
# 0-й - элемент - это логин,
# 1-й - элемент - это имя,
# 2-й - элемент - зарплата (генерироовать от 300$ до 5000$)
# 23.Написать скрипт который создаст список мён работников из salary у которых ЗП от 1500$ до 3000$
# 24.Написать скрипт который создаст список имён мужчин из gender.
# 25.Написать скрипт который создаст список имён женщин из gender.
# 26.Написать скрипт который создаст список имён неженатых мужчин из family.
# 27.Написать скрипт который создаст список имён незамужних женщин из family.
# 28.Написать скрипт который создаст список имён неженатых мужчин с ЗП больше или равной 1500$.
# Используйте Employees, family, gender, salary. Реализуйте как скрипт, без функций
# 29.Реализуйте пункт 28 через через функции.
